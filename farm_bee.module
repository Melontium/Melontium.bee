<?php
/**
 * @file
 * Code for the Farm Bee feature.
 */

include_once 'farm_bee.features.inc';

/**
 * Implements hook_farm_access_perms().
 */
function farm_bee_farm_access_perms($role) {

  // Assemble a list of entity types provided by this module.
  $types = array(
    'farm_asset' => array(
      'bee_colony',
    ),
  );

  // Grant different CRUD permissions based on the role.
  $perms = array();
  switch ($role) {

    // Farm Manager and Worker
    case 'Farm Manager':
    case 'Farm Worker':
      $perms = farm_access_entity_perms($types);
      break;

    // Farm Viewer
    case 'Farm Viewer':
      $perms = farm_access_entity_perms($types, array('view'));
      break;
  }

  return $perms;
}

/**
 * Implements hook_farm_admin_actions().
 */
function farm_bee_farm_admin_actions() {

  // Define farm bee colony actions.
  $actions = array(
    'bee_colony' => array(
      'title' => t('Add bee colony'),
      'href' => 'farm/asset/add/bee_colony',
      'views' => array(
        'farm_bee_colonies',
      ),
    ),
  );
  return $actions;
}

/**
 * Implements hook_farm_asset_breadcrumb().
 */
function farm_bee_farm_asset_breadcrumb($farm_asset) {

  // If the asset is a bee colony, add a link to the colonies list.
  $breadcrumb = array();
  if ($farm_asset->type == 'bee_colony') {
    $breadcrumb[] = l(t('Assets'), 'farm/assets');
    $breadcrumb[] = l(t('Bee Colonies'), 'farm/assets/bees');
  }
  return $breadcrumb;
}

/**
 * Implements hook_farm_asset_view_views().
 */
function farm_bee_farm_asset_view_views($farm_asset) {

  // If the entity is not a bee colony, bail.
  if ($farm_asset->type != 'bee_colony') {
    return array();
  }

  // Return a list of Views to include on bee colonies.
  return array(
    array(
      'name' => 'farm_log_activity',
      'weight' => 0,
    ),
    array(
      'name' => 'farm_log_observation',
      'weight' => 10,
    ),
    array(
      'name' => 'farm_log_input',
      'weight' => 50,
    ),
    array(
      'name' => 'farm_log_harvest',
      'weight' => 60,
    ),
    array(
      'name' => 'farm_log_movement',
      'weight' => 100,
    ),
    array(
      'name' => 'farm_asset_children',
      'display' => 'page',
      'title' => t('Children'),
      'weight' => 110,
    ),
  );
}

/**
 * Implements hook_farm_taxonomy_term_view_views().
 */
function farm_bee_farm_taxonomy_term_view_views($term) {

  // If the term is not an area, bail.
  if ($term->vocabulary_machine_name != 'farm_areas') {
    return array();
  }

  // Return a list of Views to include on Areas.
  return array(
    'farm_bee_colonies',
  );
}

/**
 * Implements hook_farm_area_links().
 */
function farm_bee_farm_area_links($id) {
  $links = array();

  // Add link to bee colonies.
  $view = views_get_view('farm_bee_colonies');
  $view->preview('default', array($id));
  if ($view->total_rows > 0) {
    $links[] = array(
      'title' => t('Bee Colonies') . ': ' . $view->total_rows,
      'href' => 'farm/assets/bees/' . $id,
    );
  }

  return $links;
}

/**
 * Implements hook_views_post_render().
 */
function farm_bee_views_post_render(&$view, &$output, &$cache) {

  // If this is the Farm Bee Colonies page...
  if ($view->name == 'farm_bee_colonies' && $view->current_display == 'page') {

    // If dashboard maps are disabled in the farm_map module settings, bail.
    if (!variable_get('farm_map_show', TRUE)) {
      return;
    }

    // If there are any arguments, bail.
    /**
     * @todo
     * Display a map that is filtered by the same arguments.
     */
    if (!empty($view->args)) {
      return;
    }

    // If the View result is not empty...
    if (!empty($view->result)) {

      // Add the bee colonies asset map to the top of the View.
      $map = \Drupal\openlayers\Openlayers::load('Map', 'farm_assets_bee_colony');
      $map_build = $map->build();
      $output = drupal_render($map_build) . $output;
    }
  }
}
